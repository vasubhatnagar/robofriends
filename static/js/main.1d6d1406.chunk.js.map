{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAgBeA,EAdJ,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,KAAKC,EAAa,EAAbA,MAAMC,EAAO,EAAPA,GACvB,OAEC,sBAAKC,UAAU,sDAAf,UACA,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACpB,gCACA,6BAAKF,IACL,kCAAKC,YCkBOK,EAxBA,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAEhB,OACK,8BAGFA,EAAOC,KAAI,SAACC,EAAKC,GAClB,OACG,cAAC,EAAD,CAECR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCEGC,EAZE,SAAC,GAA8B,EAA7BC,YAA8B,IAAlBC,EAAiB,EAAjBA,aAC9B,OACC,qBAAKV,UAAW,MAAhB,SACC,uBACAA,UAAU,gCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCEI,G,MARA,SAACC,GACd,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACCJ,EAAMK,aCsDKC,E,kDA/CZ,aAAc,IAAD,8BACZ,gBAgBFC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAhBxC,EAAKC,MAAM,CACXxB,OAAQ,GACRqB,YAAa,IAJD,E,gEASM,IAAD,OACdI,MAAM,6CACRC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAG,EAAKT,SAAS,CAACpB,OAAQ6B,S,+BAU9B,IAAD,EACmBC,KAAKN,MAAzBxB,EADC,EACDA,OAAOqB,EADN,EACMA,YACRU,EAAgB/B,EAAOgC,QAAQ,SAAAC,GACnC,OAAOA,EAAMxC,KAAKyC,cAAcC,SAAUd,EAAYa,kBAE1D,OAA8B,IAA3BJ,KAAKN,MAAMxB,OAAOoC,OACb,oBAAIxC,UAAU,KAAd,uBAMN,sBAAKA,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,yBAEA,cAAC,EAAD,CAAYU,aAAcwB,KAAKZ,iBAC/B,cAAC,EAAD,UACC,cAAC,EAAD,CAAUlB,OAAQ+B,a,GAzCFM,aCEJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OAAO,cAAC,EAAD,IAAOC,SAASC,eAAe,SAM/CX,M","file":"static/js/main.1d6d1406.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card=({name,email,id}) =>{\r\n\treturn(\r\n\r\n\t\t<div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 tc'>\r\n\t\t<img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n\t\t\t<div>\r\n\t\t\t<h2>{name}</h2>\r\n\t\t\t<p> {email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\t\r\n\t\t\r\n\t\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList=({robots})=>{\r\n\r\n return(\r\n \t    <div>\r\n\t\t \t{\r\n\t\t \t\t   \r\n\t\t\t robots.map((user,i)=>{\r\n\t\t\treturn(   \r\n\t\t\t\t  <Card \r\n\t\t\t\t   key={i} \r\n\t\t\t\t   id={robots[i].id} \r\n\t\t\t\t   name={robots[i].name} \r\n\t\t\t\t   email={robots[i].email}\r\n\t\t          />\r\n\t\t\t\t\t\r\n\t\t\t\t  );\r\n\r\n\t\t        \t})\r\n\t\t\t}\r\n\t    </div>\r\n    \t);\r\n\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox= ({searchField,searchChange}) =>{\r\n\treturn (\r\n\t\t<div className= 'pa2'>\r\n\t\t\t<input \r\n\t\t\tclassName='pa3 ba b--green bg-light-blue'\r\n\t\t\ttype='search' \r\n\t\t\tplaceholder='Search Robots'\r\n\t\t\tonChange={searchChange} />\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n\t\treturn(\r\n\t\t\t<div style={{overflowY: 'scroll', border: '5px solid white', height: '800px'}}>\r\n\t\t\t{props.children}\r\n\t\t\t</div>\r\n\t\t\t);\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\n\r\n\r\n\r\n\r\n\r\n\tclass App extends Component{\r\n\t\t\r\n\t\t\tconstructor(){\r\n\t\t\t\tsuper()\r\n\t\t\t\tthis.state={\r\n\t\t\t\trobots: [],\r\n\t\t\t\tsearchfield: ''\r\n\t\t\t    }\r\n\t\t    }\r\n\r\n\r\n\t\tcomponentDidMount(){\r\n\t\t\t    fetch('http://jsonplaceholder.typicode.com/users')\r\n\t\t\t\t.then(response =>response.json())\r\n\t\t\t\t.then(users =>this.setState({robots: users}));\r\n\t\t\t\t}\r\n\r\n\r\n\r\n\t\tonSearchChange = (event) => {\r\n\t\t\tthis.setState({searchfield: event.target.value})\r\n\t\t}\r\n\t\t\t\r\n\t\r\n\trender() {\r\n\t\tconst {robots,searchfield}=this.state;\r\n\t\tconst filteredRobots= robots.filter( robot =>{\r\n\t\t\t\treturn robot.name.toLowerCase().includes( searchfield.toLowerCase())\r\n\t\t\t})\r\nif(this.state.robots.length===0){\r\n\treturn <h1 className='tc'>Loading..</h1>\r\n}\r\n\r\nelse{\r\n\r\n\t\treturn (\r\n\t\t<div className='tc'>\r\n\t\t<h1 className='f1'>RoboFriends</h1>\r\n\r\n\t\t<SearchBox  searchChange={this.onSearchChange}/>\r\n\t\t<Scroll>\r\n\t\t\t<CardList robots={filteredRobots}/>\r\n\t\t</Scroll>\r\n\t\t</div>\r\n\t);\r\n\t}\r\n\t}\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport App from './containers/App.js';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n\r\n\r\nReactDOM.render(<App/>,document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}